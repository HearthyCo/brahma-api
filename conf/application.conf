# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
application.secret = "7WMh?srdpHHKCKE]^=CrNTS:VIvtS4<r`:^aFp^bLMdCviInZd_Vtjv?XSITK?Jr"

# The application languages
# ~~~~~
application.langs = "en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global
application.global = gl.glue.brahma.Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `conf/my.application.Router`,
# you may need to define a router file `my.application.routes`.
# Default to Routes in the root package (and `conf/routes`)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""
#
# You can expose this datasource via JNDI if needed (Useful for JPA)
# db.default.jndiName=DefaultDS
db.default.driver = org.postgresql.Driver
db.default.url = "postgres://brahma:Better_to_conquer_yourself_than_others_@localhost/brahma?stringtype=unspecified"
# db.default.user = "brahma"
# db.default.password = "Better_to_conquer_yourself_than_others_"
db.default.jndiName = DefaultDS
jpa.default = defaultPersistenceUnit

# Redis
# redis.uri = ${?REDIS_PORT}
redis.uri = "tcp://localhost:6379"
redis.keyPrefix = "session_"

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled
applyEvolutions.default = true
applyDownEvolutions.default = true

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
#
# ebean.default="models.*"

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root = ERROR

# Logger used by the framework:
logger.play = INFO

# Logger provided to your application:
logger.application = DEBUG

# Logger provided to your application:
logger.swagger=INFO
logger.com.wordnik.swagger=INFO

api.version="0.2"
swagger.api.basepath = "http://localhost:9000"
swagger.api.basepath = ${?API_URI}
# swagger.filter="security.AuthorizationFilter"

# CORS
cors.origins = [
  "http://localhost:3000",
  "http://localhost:3001",
  "http://localhost:3002",
  "http://localhost:8789",
  "http://hearthy-client-dev.dev01.glue.gl",
  "http://hearthy-professional-dev.dev01.glue.gl",
  "http://hearthy-admin-dev.dev01.glue.gl",
  "http://hearthy-client.byglue.me",
  "http://hearthy-professional.byglue.me",
  "http://brahma-admin.byglue.me",
  "http://client.demo.hearthy.co",
  "http://professional.demo.hearthy.co",
  "http://hearthy-client.pre01.glue.gl",
  "http://hearthy-professional.pre01.glue.gl",
  "http://hearthy-admin.pre01.glue.gl",
  "file://"
]

admin.uri = "http://localhost:3002"
admin.uri = ${?ADMIN_URI}

client.uri = "http://localhost:3000"
client.uri = ${?CLIENT_URI}

professional.uri = "http://localhost:3001"
professional.uri = ${?PROFESSIONAL_URI}

# Paypal
paypal.reason = "Topup your account"
paypal.currency = "EUR"
paypal.clientId = "AR-PoBBvPqAFyx1uFFkXa9Xd07XSOacB8wRbRFE25GtC7iRyRwaNq-Mqp0JU"
paypal.secret = "EIYC6xAfIANsvMN59HxgmSpK2O9A9b9-Liv99YVC1sM0ATflklILlUtwJvbg"

# Amazon AWS
aws.access.key = "AKIAJYGQZOYOGRWQ3OLA"
aws.secret.key = "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"
aws.s3.bucket = "com.hearthy.attachments"

# RabbitMQ
//amqp.uri = "amqp://userName:password@hostName:portNumber/virtualHost"
amqp.router = "gl.glue.brahma.routing.MessageRouter"
amqp.uri = "amqp://guest:guest@localhost"
amqp.uri = ${?AMQP_URI}
amqp.exchange = "amq.topic"
amqp.bindings = ["#"]

# OpenTok
opentok.key = 45206892
opentok.secret = "62e9c4e62c54f86bc111cc259a270c93c45eaf96"

# Other
parsers.multipartFormData.maxLength=5M
errors.detailed = true

# Entity names
entity.session = "Consulta"
